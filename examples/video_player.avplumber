queue.plan_capacity * 1
queue.plan_capacity v_in 63
queue.plan_capacity Video_Decode_out 7

node.add { "type": "input", "url": "/home/video/recording.ts", "dst": "in10", "group": "g1", "auto_restart": "group", "name": "input", "timeout": -1, "preseek": 0, "seek_table": "", "ts_offsets": "", "team": "@input-seek-team" }
node.add { "type": "demux", "src": "in10", "routing": { "v:0": "v_in" }, "group": "g1", "auto_restart": "group" }
node.add {"type":"dec_video","auto_restart":"group","name":"Video_Decode","group":"g1","src":"v_in","dst":"Video_Decode_out"}

node.add {"type": "pause", "team": "@pause-team", "group": "g1", "src": "Video_Decode_out", "dst": "pause_out" }
node.add {"type": "speed_video", "team": "@speed-team", "group":"g1", "src": "pause_out", "dst":"speeded"}

node.add {"type": "force_fps", "fps": "60", "group":"g1", "src": "speeded", "dst":"forcedfps"}
node.add { "type": "realtime", "team": "@realtime-team", "negative_time_tolerance": 0.007, "jitter_margin": 0, "discontinuity_threshold": 3, "src": "forcedfps", "dst": "v_rt", "group": "g1", "name": "rtsync", "set_pts": true }

node.add { "type": "enc_video","auto_restart":"group","name":"Video_Encode","group":"g1","src":"v_rt","dst":"v_outenc", "codec": "wrapped_avframe"}
node.add { "type": "mux", "src": [ "v_outenc" ], "dst": "mux0-1", "group": "g1" }
node.add { "type": "output", "format": "xv", "url": "OUT 1", "src": "mux0-1", "auto_restart": "panic", "group": "g1" }
group.start g1
